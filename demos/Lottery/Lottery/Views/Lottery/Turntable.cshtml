@model Int32
@section styles {
    <link rel="stylesheet" href="@Url.Content("~/Content/rotate.css")">
    <style>
        .bottom-container {
            text-align: center;
        }
    </style>
}
<div class='content panContent' style="zoom:0.9">
    <canvas id='canvasOut3' class='canvasOut3' width="600" height="600"></canvas>
    <canvas id='canvasOut2' class='canvasOut2' width="570" height="570"></canvas>
    <div class='canvasOut1' id='rotate'>
        <canvas id="canvasOut1" class='canvasOut1' width="550" height="550"></canvas>
    </div>
    <canvas id='canvasIn2' class='canvasIn2' width="400" height="400"></canvas>
    <div class='canvasIn1' id='rotateIn'>
        <canvas id="canvasIn1" class='canvasIn1' width="380" height="380"></canvas>
    </div>
    <img class='start' src='@Url.Content("~/Resource/pan.png")' id="start" style="width:160px;height:150px" />
    <canvas id='canvasPoint' class='canvasPoint' width="600" height="600"></canvas>
    <div class="bottom-container ctrl-container">
        <button type="button" class="btn btn-selDesk" style="margin-right:40%; margin-top:-5%">选取桌位</button>
        <button type="button" class="btn btn-selDesk-shadow" style="margin-right:40%; margin-top:-5%;display:none">选取桌位</button>
        <button type="button" class="btn btn-selSeat" style="margin-right:0px; margin-top:-5%">选取座位</button>
        <button type="button" class="btn btn-selSeat-shadow" style="margin-right:0px; margin-top:-5%;display:none">选取座位</button>
    </div>
</div>
@*<iframe src="@Url.Action("TurntableShadow")" style="width:100%; height:100%;position:absolute;top:0px;border:0px;z-index:1"></iframe>*@
<div class="info-container">
    <div class="info-desk">
        <div>
            <div>
                <div class="moveItem">
                    @for (var i = 0; i < Model; i++)
                    {
                        <div class="info-cart">
                            @*<span class="empty"></span>*@
                            <span class="text">@(i + 1)桌</span>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script src="@Url.Content("~/Scripts/rotate.js")"></script>
    <script>
        $(function () {
            var app = window.app;
            var desks = '@Model' - 0;
            var minDegree = Math.round(360 / desks);
            // 最终结果
            var resultDesk = 1;
            var resultSeat = 1;
            var Lottey = new app.lottery({
                canvasOut1: document.getElementById('canvasOut1'),
                canvasOut2: document.getElementById('canvasOut2'),
                canvasOut3: document.getElementById('canvasOut3'),
                canvasIn1: document.getElementById('canvasIn1'),
                canvasIn2: document.getElementById('canvasIn2'),
                canvasPoint: document.getElementById('canvasPoint')
            });
            var colors = ["#fbae27", "#f9be34"];
            var text = ["一号桌", "", "", "", "", "", "", "", "", ""];
            var textIn = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"];
            Lottey.init(text.length, colors, text, 0, textIn.length, textIn, 0);

            var isTransitionOut = false;
            var isTransitionIn = false;

            function rmInterval() {
                if (isTransitionIn) {
                    isTransitionIn = false;
                    //if (interValId) {
                    //    clearInterval(interValId);
                    //    interValId = 0;
                    //}
                    if (Lottey.mytimeIn) {
                        clearInterval(Lottey.mytimeIn);
                        Lottey.mytimeIn = 0;
                        layer.open({
                            type: 1,
                            title: false,
                            skin: 'layui-layer-demo', // 样式类名
                            closeBtn: 0, // 不显示关闭按钮
                            anim: 2,
                            shadeClose: true, // 开启遮罩关闭
                            content: `<div class="result-container">\
                            <img src="@Url.Content("~/Resource/winner.gif")" class="img-circle">\
                            <br>\
                            <div>${resultDesk}&nbsp;&nbsp;桌&nbsp;&nbsp;${resultSeat}&nbsp;&nbsp;号</div>\
                          </div>`
                        });
                    }
                    //window.frames[0].app.setPosition({
                    //    rotateIn: Lottey.isRotateIn
                    //});
                    $('.btn-selSeat-shadow').hide();
                    $('.btn-selSeat').show();
                    $('.btn-selDesk-shadow').hide();
                    $('.btn-selDesk').show();
                }
                if (isTransitionOut) {
                    isTransitionOut = false;
                    //if (interValDeskId) {
                    //    clearInterval(interValDeskId);
                    //    interValDeskId = 0;
                    //}
                    if (Lottey.mytime) {
                        clearInterval(Lottey.mytime);
                        Lottey.mytime = 0;
                    }
                    //moveUp(resultDesk, 24);
                    //window.frames[0].app.setPosition({
                    //    rotate: Lottey.isRotate,
                    //    deskNo: resultDesk
                    //});
                    $('.btn-selDesk-shadow').hide();
                    $('.btn-selDesk').show();
                    $('.btn-selSeat-shadow').hide();
                    $('.btn-selSeat').show();
                }
            }

            function getResultDeskByRotate(n) {
                var result = n % 360 <= 18 ? Math.ceil(n % 360 / minDegree) : Math.ceil((360 - (n % 360) + 18) / minDegree);
                return result == 0 ? 1 : result;
            }

            function getResultSeatByRotate(n) {
                return Math.ceil((360 - (n % 360)) / 30);
            }

            function getRandomDesk() {
                // 传入指定的旋转角度，内部指定获奖结果。在指定角度上加上旋转基数模拟转盘随机旋转。
                var n = Lottey.isRotate;
                // 随机获奖结果
                // 取一个随机的旋转角度，使获奖结果随机化
                var rand = Math.ceil(Math.random() * desks * 2);
                // console.log(rand);
                // 360为旋转基数，最低要旋转360度，即1圈。rand-(rand%60) 这个是让指针永远停在扇形中心的算法。n + 是为了重复点击的时候有足够的旋转角度。
                n = n + rand * minDegree + 360;
                // console.log(n);
                Lottey.isRotate = n;
                resultDesk = getResultDeskByRotate(n);
            };

            function getRandomSeat() {
                // 传入指定的旋转角度，内部指定获奖结果。在指定角度上加上旋转基数模拟转盘随机旋转。
                var n = Lottey.isRotateIn;
                // 随机获奖结果
                // 取一个随机的旋转角度，使获奖结果随机化
                var rand = Math.ceil(Math.random() * 24);
                n = n + rand * 30 + 360;
                n = n % 30 == 0 ? n + 15 : n;
                Lottey.isRotateIn = n;
                resultSeat = getResultSeatByRotate(n);
            };

            function getTempDesk() {
                moveUp(getResultDeskByRotate(Lottey.isRotate - 180), 24);
                document.getElementById('rotate').style.transform = 'rotate(' + (Lottey.isRotate - 180) + 'deg)';
            };

            function getTempSeat() {
                document.getElementById('rotateIn').style.transform = 'rotate(' + (Lottey.isRotateIn - 180) + 'deg)';
            };

            var interValDeskId = 0;
            var isOutProcess = false;
            //document.getElementById('rotate').addEventListener('webkitTransitionEnd', rmInterval);
            $('.btn-selDesk').click(function () {
                //window.frames[0].$('.btn-selDesk').click();
                //$('iframe').show();
                //$('.btn-selDesk').html('停&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;止');
                if (isOutProcess) {
                    isOutProcess = false;
                    $('.btn-selDesk').hide();
                    $('.btn-selDesk-shadow').show();
                    $('.btn-selSeat').hide();
                    $('.btn-selSeat-shadow').show();
                    // 转到指定中间角度
                    getTempDesk();
                    $('#rotate').removeClass('rotationX');
                    $('.moveItem').removeClass('moveUp');
                    clearInterval(interValDeskId);
                    //window.parent.$('iframe').hide();
                    setTimeout(function () {
                        $('.moveItem').addClass('moveTarget3');
                        $('#rotate').addClass('moveTarget3');
                        stopLotteryOut();
                    });
                    $('.btn-selDesk').text('选取桌位');
                    // 选取椅子可以点击
                    $('.btn-selSeat-shadow').hide();
                    $('.btn-selSeat').show();
                } else {
                    isOutProcess = true;
                    // 获取随机桌号
                    getRandomDesk();
                    // 开始闪烁
                    Lottey.mytime = setInterval(Lottey.getCanvasOut2.bind(Lottey), 200);
                    $('.btn-selDesk').html('停&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;止');
                    // 选取椅子不能点击
                    $('.btn-selSeat').hide();
                    $('.btn-selSeat-shadow').show();
                    $('.moveItem').removeClass('moveTarget3');
                    $('#rotate').removeClass('moveTarget3');
                    $('.moveItem').addClass('moveUp');
                    $('#rotate').addClass('rotationX');
                    interValDeskId = setInterval(changeSelectDesk, 40);
                }
            });

            function stopLotteryOut() {
                isTransitionOut = true;
                //console.log(n + "->" + resultDesk);
                if (Lottey.isRotate) {
                    document.getElementById('rotate').style.transform = 'rotate(' + Lottey.isRotate + 'deg)';
                    moveUp(resultDesk, 24);
                    //interValDeskId = setInterval(changeSelectDesk, 40);
                    $('.btn-selDesk').text('选取桌位');
                }

                // 停止
                setTimeout(function () {
                    rmInterval();
                }, 4000);

                //var curRotate = 0;
                //var equalTimes = 0;
                //var stopIntervalId = setInterval(function () {
                //    var rotate = app.getRotate("rotate");
                //    if (curRotate == rotate) {
                //        equalTimes++;
                //        if (equalTimes === 10) {
                //            clearInterval(stopIntervalId);
                //            rmInterval();
                //        }
                //    } else {
                //        curRotate = rotate;
                //    }
                //}, 60);
            }

            //var interValId = 0;
            var isInProcess = false;
            //document.getElementById('rotateIn').addEventListener('webkitTransitionEnd', rmInterval);
            $('.btn-selSeat').click(function () {
                //window.frames[0].$('.btn-selSeat').click();
                //$('iframe').show();
                //$('.btn-selSeat').html('停&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;止');
                if (isInProcess) {
                    isInProcess = false;
                    $('.btn-selSeat').hide();
                    $('.btn-selSeat-shadow').show();
                    $('.btn-selDesk').hide();
                    $('.btn-selDesk-shadow').show();
                    // 转到指定中间角度
                    getTempSeat();
                    $('#rotateIn').removeClass('rotationX');
                    setTimeout(function () {
                        $('#rotateIn').addClass('moveTarget3');
                        stopLotteryIn();
                    }, 0);
                    //window.parent.$('iframe').hide();
                    $('.btn-selSeat').text('选取座位');
                } else {
                    isInProcess = true;
                    // 获取随机椅子号
                    getRandomSeat();
                    // 开始闪烁
                    Lottey.mytimeIn = setInterval(Lottey.getCanvasIn2.bind(Lottey), 200);
                    $('.btn-selSeat').html('停&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;止');
                    // 选取桌子不能点击
                    $('.btn-selDesk').hide();
                    $('.btn-selDesk-shadow').show();
                    $('#rotateIn').removeClass('moveTarget3');
                    $('#rotateIn').addClass('rotationX');
                }
            });

            function stopLotteryIn() {
                isTransitionIn = true;
                // 开始闪烁
                //Lottey.mytimeIn = setInterval(Lottey.getCanvasIn2.bind(Lottey), 200);
                
                if (Lottey.isRotateIn) {
                    document.getElementById('rotateIn').style.transform = 'rotate(' + Lottey.isRotateIn + 'deg)';
                    //interValId = setInterval(changeSelectSeat, 40);
                    //$('.btn-selSeat').text('选取座位');
                }

                // 停止
                setTimeout(function () {
                    rmInterval();
                }, 4000);

                //var curRotate = 0;
                //var equalTimes = 0;
                //var stopIntervalId = setInterval(function () {
                //    var rotate = app.getRotate("rotateIn");
                //    if (curRotate == rotate) {
                //        equalTimes++;
                //        if (equalTimes === 10) {
                //            clearInterval(stopIntervalId);
                //            rmInterval();
                //        }
                //    } else {
                //        curRotate = rotate;
                //    }
                //}, 60);
            }

            //function changeSelectSeat() {
            //    var degree = app.getRotate("rotateIn");
            //    if (degree > 0) {
            //        degree = 360 - degree;
            //    } else {
            //        degree = 0 - degree;
            //    }
            //    //console.log('当前选中：' + Math.ceil(degree / 30));
            //    return Math.ceil(degree / 30);
            //}

            function changeSelectDesk() {
                var deskNo = 0;
                var degree = app.getRotate("rotate");
                if (degree > 0) {
                    degree = 360 - degree;
                } else {
                    degree = 0 - degree;
                }
                if (degree <= 18) {
                    deskNo =  Math.ceil(degree / minDegree);
                } else {
                    deskNo = Math.ceil((degree + 18) / minDegree);
                }
                // console.log('当前选中：' + deskNo + " -> " + degree);
                // 翻牌到对应桌号
                moveUp(deskNo, 24);
                // console.log(deskNo);
                return deskNo;
            }

            function moveUp(deskNo, itemHeight) {
                //var curMarginTop = $('.info-desk .info-cart:first').css('marginTop');
                //curMarginTop = curMarginTop.replace('px', '');
                //var newMarginTop = 0 - itemHeight * (deskNo - 1);
                //$('.info-desk .info-cart:first').css('marginTop', newMarginTop + 'px');
                $('.moveItem').css('transform', 'translateY(-' + itemHeight * (deskNo - 1) + 'px)');
            }
        });
    </script>
}